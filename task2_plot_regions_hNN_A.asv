%
% Versin 0.9  (HS 06/03/2020)
%
% template script for task2_plot_regions_hNN_A.m

%Takes polygon input in the form of a matrix:
%Each row represents a point. Col 1 = x, Col 2 = y.

poly =[1.89311,4.03806; %polygon A coordinate matrix
    1.53486,3.71794;
    2.13083,2.98602;
    2.59935,3.57138];

figure
title({'Neural network classification using step activation functions';
    'to determine the boundaries of polygon A'});xlim([0 4]);
ylim([0 5]);
xlabel('X1');
ylabel('X2');
hold on;

for x = 0:4
    for y = 0:5
        if task2_hNN_A(x,y) == 1
            colour = [0.3060, 0.6740, 0.3080];
        else
            colour = [0.3010, 0.7450, 0.9330];
        end
        plot(x,y,colour);
        hold on;
    end
end


% x = [-2 8 8 -2];
% y = [8 8 -1 -1];
% patch(x,y,[0.3010, 0.7450, 0.9330]);
% 
% 
% x = poly(:,1)';
% y = poly(:,2)';
% patch(x,y,[0.3060, 0.6740, 0.3080]);
% 
% 
% plot([poly(1,1),poly(4,1),poly(3,1),poly(2,1),poly(1,1)],[poly(1,2),poly(4,2),poly(3,2),poly(2,2),poly(1,2)],'g-');
% hold on;

pCoeffs = [0 2; -0.14 0.1; -0.08 -0.08; 0 0 ];
for a = 1:4
    text(poly(a,1)+pCoeffs(a,1),poly(a,2)+pCoeffs(a,1),sprintf('V%d',a));
    hold on;
end

legend({'Class 0','Class 1'});

